version: '3.8'

services:
  # API Gateway
  kong:
    image: kong:latest
    container_name: seamless_kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/etc/kong/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - "8000:8000"  # Kong proxy
      - "8001:8001"  # Kong admin API
    volumes:
      - ../Kong/kong.prod.yml:/etc/kong/kong.yml
    networks:
      - seamless_network

  # Core Service
  core-service:
    build: ../src/Core
    container_name: seamless_core
    restart: always
    ports:
      - "8010:8000"
    volumes:
      - ../src/Core:/app
    env_file:
      - ..src/Core/envs/.env.production
    depends_on:
      - core-postgres
      - core-redis
    networks:
      - seamless_network

  core-postgres:
    image: postgres:16-alpine
    container_name: seamless_core_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=core_db
    volumes:
      - seamless_core_postgres_data:/var/lib/postgresql/data
    networks:
      - seamless_network

  core-redis:
    image: redis:latest
    container_name: seamless_core_redis
    restart: always
    volumes:
      - seamless_core_redis_data:/data
    networks:
      - seamless_network

  # Academics Service
  academics-service:
    build: ../src/Academics
    container_name: seamless_academics
    restart: always
    ports:
      - "8020:8000"
    volumes:
      - ../src/Academics:/app
    env_file:
      - ../src/Academics/envs/.env.production
    depends_on:
      - academics-postgres
      - academics-redis
      - core-service
    networks:
      - seamless_network

  academics-postgres:
    image: postgres:16-alpine
    container_name: seamless_academics_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=academics_db
    volumes:
      - seamless_academics_postgres_data:/var/lib/postgresql/data
    networks:
      - seamless_network

  academics-redis:
    image: redis:latest
    container_name: seamless_academics_redis
    restart: always
    volumes:
      - seamless_academics_redis_data:/data
    networks:
      - seamless_network

  # Library Service
  library-service:
    build: ../src/Library
    container_name: seamless_library
    restart: always
    ports:
      - "8030:8000"
    volumes:
      - ../src/Library:/app
    env_file:
      - ../src/Library/envs/.env.production
    depends_on:
      - library-postgres
      - library-redis
      - core-service
    networks:
      - seamless_network

  library-postgres:
    image: postgres:16-alpine
    container_name: seamless_library_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=library_db
    volumes:
      - seamless_library_postgres_data:/var/lib/postgresql/data
    networks:
      - seamless_network

  library-redis:
    image: redis:latest
    container_name: seamless_library_redis
    restart: always
    volumes:
      - seamless_library_redis_data:/data
    networks:
      - seamless_network

  # ELK Stack
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: seamless_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - seamless_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - seamless_network

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.4
    container_name: seamless_logstash
    volumes:
      - ../logstash/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    depends_on:
      - elasticsearch
    networks:
      - seamless_network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: seamless_kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - seamless_network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.4
    container_name: seamless_filebeat
    volumes:
      - ../filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount local log directories
      - ../Core/logs:/logs/core:ro
      - ../Academics/logs:/logs/academics:ro
      - ../Library/logs:/logs/library:ro
    depends_on:
      - elasticsearch
      - logstash
    networks:
      - seamless_network

volumes:
  seamless_core_postgres_data:
  seamless_core_redis_data:
  seamless_academics_postgres_data:
  seamless_academics_redis_data:
  seamless_library_postgres_data:
  seamless_library_redis_data:
  seamless_elasticsearch_data:

networks:
  seamless_network:
    driver: bridge
